apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: clickhouse
    meta.helm.sh/release-namespace: nhbank
  labels:
    app.kubernetes.io/component: keeper
    app.kubernetes.io/instance: clickhouse
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/part-of: clickhouse
    app.kubernetes.io/version: 25.6.2
    helm.sh/chart: clickhouse-9.3.8
  name: clickhouse-keeper
  namespace: nhbank
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: keeper
      app.kubernetes.io/instance: clickhouse
      app.kubernetes.io/name: clickhouse
      app.kubernetes.io/part-of: clickhouse
  serviceName: clickhouse-keeper-headless
  template:
    metadata:
      annotations:
        checksum/configuration: 7944503e48ac194f1657b551ca9f91d899549ea1949f539b574b306baa8e1a91
      labels:
        app.kubernetes.io/component: keeper
        app.kubernetes.io/instance: clickhouse
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: clickhouse
        app.kubernetes.io/part-of: clickhouse
        app.kubernetes.io/version: 25.6.2
        helm.sh/chart: clickhouse-9.3.8
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: keeper
                  app.kubernetes.io/instance: clickhouse
                  app.kubernetes.io/name: clickhouse
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: CLICKHOUSE_KEEPER_SERVER_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: CLICKHOUSE_KEEPER_TCP_PORT
          value: "9181"
        - name: CLICKHOUSE_KEEPER_RAFT_PORT
          value: "9234"
        image: docker.io/bitnami/clickhouse-keeper:25.3.2-debian-12-r7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: tcp
          timeoutSeconds: 1
        name: keeper
        ports:
        - containerPort: 9181
          name: tcp
          protocol: TCP
        - containerPort: 9234
          name: raft
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              OK=$(exec 3<>/dev/tcp/127.0.0.1/9181; printf 'ruok' >&3; IFS=; tee <&3; exec 3<&-;)
              if [[ "${OK}" == "imok" ]]; then exit 0; else exit 1; fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "3"
            memory: 2Gi
          requests:
            cpu: "2"
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /bitnami/clickhouse-keeper
          name: data
        - mountPath: /bitnami/clickhouse-keeper/etc/keeper_config.xml
          name: configuration
          subPath: keeper_config.xml
        - mountPath: /opt/bitnami/clickhouse-keeper/etc
          name: empty-dir
          subPath: app-conf-dir
        - mountPath: /opt/bitnami/clickhouse-keeper/logs
          name: empty-dir
          subPath: app-logs-dir
        - mountPath: /opt/bitnami/clickhouse-keeper/tmp
          name: empty-dir
          subPath: app-tmp-dir
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: regcred
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
      serviceAccount: clickhouse
      serviceAccountName: clickhouse
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: empty-dir
      - configMap:
          defaultMode: 420
          name: clickhouse-keeper
        name: configuration
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app.kubernetes.io/component: keeper
        app.kubernetes.io/instance: clickhouse
        app.kubernetes.io/name: clickhouse
        app.kubernetes.io/part-of: clickhouse
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
      volumeMode: Filesystem
    status:
      phase: Pending
